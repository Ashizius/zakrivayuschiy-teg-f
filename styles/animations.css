/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.
*/


/* анимации меню*/

.theme-menu__button:disabled {
  transition: opacity var(--button-animation-time, 1s);
}

.theme-menu__button:disabled::before {
  transition: opacity var(--button-animation-time, 1s) ease-out, rotate var(--button-animation-time, 1s) linear;
  animation: Xtransition calc(var(--base-time, 1s) * 2.2) infinite ease-in-out;
  animation-direction: alternate;
}

.theme-menu__button::after {
  transition: opacity var(--button-animation-time, 1s) ease-in-out, scale var(--button-animation-time, 1s) ease-in-out;
}

@keyframes Xtransition {
  from {
    transform: translateX(-2px);
  }

  to {
    transform: translateX(2px);
  }
}

.theme-menu__button:focus {
  opacity: 0.6;
  outline: none;
}

.theme-menu__button:focus::after {
  opacity: 1;
  scale: 1;
}

@supports selector(:focus-visible) {
  .theme-menu__button:focus {
    outline: none;
    opacity: 0.6;
  }
  .theme-menu__button:focus::after {
    opacity: 0;
  }

  .theme-menu__button:focus-visible {
    opacity: 0.6;
  }

  .theme-menu__button:focus-visible::after {
    opacity: 1;
    scale: 1;
  }
}

/* анимации карточек*/


/*анимация к исходному*/
.card__icon-button .heart-core {
  transition: opacity calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.1),
              fill calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.1);
}

.card__icon-button .heart-body{
  transition: opacity calc(var(--icon-time, 0.3s)),
              fill calc(var(--icon-time, 0.3s));
}

.card__icon-button .heart-contour {
  transition: fill calc(var(--icon-time, 0.3s) / 3) linear;
}

/*анимация ховера и клика*/
.card__icon-button:hover .heart-core {
  transition: opacity calc(var(--icon-time, 0.3s));
}

.card__icon-button:hover .heart-body {
  transition: opacity calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17);
}

.card__icon-button:active .heart-core {
  transition: fill calc(var(--icon-time, 0.3s));
}

.card__icon-button:active .heart-body {
  transition: fill calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17);
}

/* анимации лайка по нажатию*/
:not(.card__icon-button:hover) .is-liked .heart-core { /*кадр 1: 0s -- 0.3s*/
  transition-property: opacity;
  transition-duration: calc(var(--icon-time, 0.3s) * 1);
  transition-delay: 0;
}

:not(.card__icon-button:hover) .is-liked .heart-body { /*кадр 2: 0.051s -- 0.351s*/
  transition-property: opacity;
  transition-duration: calc(var(--icon-time, 0.3s));
  transition-delay: calc(var(--icon-time, 0.3s) * 0.17);
  /*transition: opacity calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17),
              fill calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17);*/
}

.card__icon-button:hover .is-liked .heart-core { /*кадр 1: 0s -- 0.3s*/
  transition-property: fill;
  transition-duration: calc(var(--icon-time, 0.3s) * 1);
  transition-delay: 0;
}

.card__icon-button:hover .is-liked .heart-body { /*кадр 2: 0.051s -- 0.351s*/
  transition-property: fill;
  transition-duration: calc(var(--icon-time, 0.3s));
  transition-delay: calc(var(--icon-time, 0.3s) * 0.17);
  /*transition: opacity calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17),
              fill calc(var(--icon-time, 0.3s)) calc(var(--icon-time, 0.3s) * 0.17);*/
}

.is-liked .heart-contour { /*кадр 3: 0s -- 0,1s*/
  transition-property: fill;
  transition-duration: calc(var(--icon-time, 0.3s) / 3);
  transition-delay: 0;
  /*  transition: fill calc(var(--icon-time, 0.3s) * 1) calc(var(--icon-time, 0.3s) * 0.17);*/
}

.is-liked .heart-contour,
.is-liked .heart-body,
.is-liked .heart-core { /*кадр 4: 0.1s -- 0.4s*/
  animation: like-grow calc(var(--icon-time, 0.3s) / 2) 2 alternate calc(var(--icon-time, 0.3s) / 3);
}

.is-liked .heart-sparks { /*кадр 5: 0.2s -- 0.5s*/
  animation: like-sparks calc(var(--icon-time, 0.3s) / 2) 2 alternate calc(var(--icon-time, 0.3s) / 3 * 2);
}

@keyframes like-grow {
  from {
    scale: 100%;
  }

  to {
    scale: 125%;
  }
}

@keyframes like-sparks {
  from {
    fill: var(--effect-color, #f00);
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/*
.is-liked .heart-core,
.is-liked .heart-body {
  animation-name: like-press;
}

.is-liked .heart-contour {
  animation-name: like-press;
}
*/


/*
@keyframes like-press-hover {
  from {

  }

  20%{

  }

  40%{

  }

  60%{

  }

  80%{

  }

  to {

  }
}

@keyframes like-hover {
  from {

  }

  50%{

  }

  to {

  }
}

@keyframes like-active {
  from {

  }

  50%{

  }

  to {

  }
}

*/

@media (prefers-reduced-motion: reduce) {
  .theme-menu__button {
    transition:none;
  }

  .theme-menu__button::before {
    transition:none;
  }

  .theme-menu__button:disabled::before{
    animation: none;
  }
}
